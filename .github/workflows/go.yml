# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Integração Contínua

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    runs-on: ${{ matrix.os }}
    env:
      DB_HOST: localhost
      DB_PORT: 5432
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: root 
    strategy:
      matrix:
        go_version: [ '1.22' ]
        os: [ 'ubuntu-latest' ]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go_version }}

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version
      
    - name: Build-DB
      run: docker-compose build
      
    - name: Create-DB
      run: docker-compose up -d

    - name: Wait for DB
      run: |
        for i in {1..10}; do
          nc -z postgres 5432 && echo "Database is ready" && exit 0 || echo "Waiting for database..."
          sleep 5
        done
        echo "Database is not ready" && exit 1

    - name: Test
      run: go test -v main_test.go

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: go build -v main.go